#pragma once

#include <defines.h>

/*
    @brief Запрашивает память указанного размера у системы и возвращает указатель на нее.
    @param size Количество байт памяти которую необходимо получить.
    @return Указатель на полученную память, в противном случаи null, если это невозможно.
*/
KAPI void* platform_memory_allocate(u64 size);

/*
    @brief Возвращает память указанного размера системе.
    NOTE: Указатель необходимо обнулить самостоятельно!
    @param block Указатель на полученную ранее память, которую необходимо вернуть.
*/
KAPI void platform_memory_free(void* block);

/*
    @brief Обнуляет байты указанного участа памяти заданного размера.
    @param block Указатель на участок памяти.
    @param size Количество байт памяти.
*/
KAPI void platform_memory_zero(void* block, u64 size);

/*
    @brief Заполняет байты указаного участка памяти заданного размером и значением.
    @param block Указатель на участок памяти.
    @param size Количество байт памяти.
    @param value Значение которым нужно заполнить память.
*/
KAPI void platform_memory_set(void* block, u64 size, i32 value);

/*
    @brief Копирует заданное количество байт из одного участка памяти в другой.
    NOTE: Адреса участков памяти не должны пересекаться!
    @param dest Указатель на участок памяти куда копировать.
    @param src Указатель на участок памяти откуда копировать.
    @param size Количествой байт которое необходимо скопировать.
*/
KAPI void platform_memory_copy(void* dest, const void* src, u64 size);

/*
    @brief Копирует заданное количество байт из одного участка памяти в другой.
    NOTE: Адреса участков памяти могут пересекаться, но операция выполняется дольше!
    @param dest Указатель на участок памяти куда копировать.
    @param src Указатель на участок памяти откуда копировать.
    @param size Количествой байт которое необходимо скопировать.
*/
KAPI void platform_memory_move(void* dest, const void* src, u64 size);
